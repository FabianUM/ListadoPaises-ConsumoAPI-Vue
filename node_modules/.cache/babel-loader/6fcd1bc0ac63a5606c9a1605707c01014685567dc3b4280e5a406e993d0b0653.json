{"ast":null,"code":"import gql from 'graphql-tag';\nimport pixabayClient from '@/axios';\nexport default {\n  data() {\n    return {\n      countries: []\n    };\n  },\n  apollo: {\n    countries: {\n      query: gql`\n          query {\n            countries {\n              code\n              name\n              continent {\n                name\n              }\n            }\n          }\n        `,\n      update(data) {\n        return data.countries.map(async country => {\n          const imageResponse = await pixabayClient.get('', {\n            params: {\n              q: country.name,\n              image_type: 'photo',\n              per_page: 1\n            }\n          });\n          const image = imageResponse.data.hits[0]?.webformatURL;\n          return {\n            ...country,\n            image\n          };\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["gql","pixabayClient","data","countries","apollo","query","update","map","country","imageResponse","get","params","q","name","image_type","per_page","image","hits","webformatURL"],"sources":["src/views/Home.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <div class=\"card-deck\">\r\n        <div class=\"card\" v-for=\"country in countries\" :key=\"country.code\">\r\n          <img class=\"card-img-top\" :src=\"country.image\" alt=\"Country image\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">{{ country.name }}</h5>\r\n            <p class=\"card-text\">{{ country.continent }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import gql from 'graphql-tag';\r\n  import pixabayClient from '@/axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        countries: [],\r\n      };\r\n    },\r\n    apollo: {\r\n      countries: {\r\n        query: gql`\r\n          query {\r\n            countries {\r\n              code\r\n              name\r\n              continent {\r\n                name\r\n              }\r\n            }\r\n          }\r\n        `,\r\n        update(data) {\r\n          return data.countries.map(async (country) => {\r\n            const imageResponse = await pixabayClient.get('', {\r\n              params: {\r\n                q: country.name,\r\n                image_type: 'photo',\r\n                per_page: 1,\r\n              },\r\n            });\r\n            const image = imageResponse.data.hits[0]?.webformatURL;\r\n            return { ...country, image };\r\n          });\r\n        },\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  .card-deck {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-around;\r\n  }\r\n  .card {\r\n    width: 18rem;\r\n    margin-bottom: 1rem;\r\n  }\r\n  </style>\r\n  "],"mappings":"AAeA,OAAAA,GAAA;AACA,OAAAC,aAAA;AAEA;EACAC,KAAA;IACA;MACAC,SAAA;IACA;EACA;EACAC,MAAA;IACAD,SAAA;MACAE,KAAA,EAAAL,GAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACAM,OAAAJ,IAAA;QACA,OAAAA,IAAA,CAAAC,SAAA,CAAAI,GAAA,OAAAC,OAAA;UACA,MAAAC,aAAA,SAAAR,aAAA,CAAAS,GAAA;YACAC,MAAA;cACAC,CAAA,EAAAJ,OAAA,CAAAK,IAAA;cACAC,UAAA;cACAC,QAAA;YACA;UACA;UACA,MAAAC,KAAA,GAAAP,aAAA,CAAAP,IAAA,CAAAe,IAAA,KAAAC,YAAA;UACA;YAAA,GAAAV,OAAA;YAAAQ;UAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}