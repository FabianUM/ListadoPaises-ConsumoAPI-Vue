{"ast":null,"code":"import gql from 'graphql-tag';\nimport pixabayClient from '@/axios';\nexport default {\n  name: 'HomeView',\n  data() {\n    return {\n      countries: []\n    };\n  },\n  apollo: {\n    countries: {\n      query: gql`\n        query {\n          countries {\n            code\n            name\n            continent {\n              name\n            }\n          }\n        }\n      `,\n      update(data) {\n        return data.countries.map(async country => {\n          const imageResponse = await pixabayClient.get('', {\n            params: {\n              q: country.name,\n              image_type: 'photo',\n              per_page: 1\n            }\n          });\n          const image = imageResponse.data.hits[0]?.webformatURL;\n          return {\n            ...country,\n            image\n          };\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["gql","pixabayClient","name","data","countries","apollo","query","update","map","country","imageResponse","get","params","q","image_type","per_page","image","hits","webformatURL"],"sources":["src/views/HomeView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"card-deck\">\r\n      <div class=\"a\"><p>Hola</p></div>\r\n      <div class=\"card\" v-for=\"country in countries\" :key=\"country.code\">\r\n        <img class=\"card-img-top\" :src=\"country.image\" alt=\"Country image\">\r\n        <div class=\"card-body\">\r\n          <h5 class=\"card-title\">{{ country.name }}</h5>\r\n          <p class=\"card-text\">{{ country.continent }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport gql from 'graphql-tag';\r\nimport pixabayClient from '@/axios';\r\n\r\nexport default {\r\n  name: 'HomeView',\r\n  data() {\r\n    return {\r\n      countries: [],\r\n    };\r\n  },\r\n  apollo: {\r\n    countries: {\r\n      query: gql`\r\n        query {\r\n          countries {\r\n            code\r\n            name\r\n            continent {\r\n              name\r\n            }\r\n          }\r\n        }\r\n      `,\r\n      update(data) {\r\n        return data.countries.map(async (country) => {\r\n          const imageResponse = await pixabayClient.get('', {\r\n            params: {\r\n              q: country.name,\r\n              image_type: 'photo',\r\n              per_page: 1,\r\n            },\r\n          });\r\n          const image = imageResponse.data.hits[0]?.webformatURL;\r\n          return { ...country, image };\r\n        });\r\n      },\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.card-deck {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-around;\r\n}\r\n.card {\r\n  width: 18rem;\r\n  margin-bottom: 1rem;\r\n}\r\n</style>\r\n"],"mappings":"AAgBA,OAAAA,GAAA;AACA,OAAAC,aAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;IACA;EACA;EACAC,MAAA;IACAD,SAAA;MACAE,KAAA,EAAAN,GAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACAO,OAAAJ,IAAA;QACA,OAAAA,IAAA,CAAAC,SAAA,CAAAI,GAAA,OAAAC,OAAA;UACA,MAAAC,aAAA,SAAAT,aAAA,CAAAU,GAAA;YACAC,MAAA;cACAC,CAAA,EAAAJ,OAAA,CAAAP,IAAA;cACAY,UAAA;cACAC,QAAA;YACA;UACA;UACA,MAAAC,KAAA,GAAAN,aAAA,CAAAP,IAAA,CAAAc,IAAA,KAAAC,YAAA;UACA;YAAA,GAAAT,OAAA;YAAAO;UAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}